[
  {
    "kind": "class",
    "name": "Exception",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
      "line": 20,
      "col": 0,
      "byteIndex": 560
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A generic exception, and the base exception from which all other kz.io exceptions are derived."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates an Exception with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 32,
            "col": 2,
            "byteIndex": 897
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an Exception with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 40,
            "col": 2,
            "byteIndex": 1161
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new Exception instance.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": true,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 47,
            "col": 2,
            "byteIndex": 1389
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The exceptionâ€™s additional data properties."
          },
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exceptionProps",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 25,
            "col": 2,
            "byteIndex": 727
          }
        },
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 58,
            "col": 2,
            "byteIndex": 1595
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "The name for this type of exception."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 63,
            "col": 2,
            "byteIndex": 1688
          }
        },
        {
          "jsDoc": {
            "doc": "The URL referencing help for this type of exception."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "helpUrl",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 72,
            "col": 2,
            "byteIndex": 1850
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the base URL for the help documentation for this exception.\n",
            "tags": [
              {
                "kind": "return",
                "doc": "The base URL for the help documentation for this exception."
              }
            ]
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getHelpBaseUrl",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 104,
            "col": 2,
            "byteIndex": 2820
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `data` property, URL-encoded.\n",
            "tags": [
              {
                "kind": "return",
                "doc": "The `data` property, URL-encoded."
              }
            ]
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUrlEncodedData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 118,
            "col": 2,
            "byteIndex": 3180
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `cause` property, URL-encoded.\n",
            "tags": [
              {
                "kind": "return",
                "doc": "The `cause` property, URL-encoded."
              }
            ]
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUrlEncodedCause",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 131,
            "col": 2,
            "byteIndex": 3506
          }
        },
        {
          "jsDoc": {
            "doc": "The inner cause, or more original, cause of the exception."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cause",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Error",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Error"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 154,
            "col": 2,
            "byteIndex": 4035
          }
        },
        {
          "jsDoc": {
            "doc": "The remaining properties from the data properties, with the cause property removed."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Omit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      {
                        "repr": "cause",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "cause"
                        }
                      }
                    ],
                    "typeName": "Omit"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 163,
            "col": 2,
            "byteIndex": 4245
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a numeric code unique to this type of exception.\n",
            "tags": [
              {
                "kind": "return",
                "doc": "A numeric code unique to this type of exception."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "valueOf",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 177,
            "col": 2,
            "byteIndex": 4622
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a human-readable description of the exception.\n",
            "tags": [
              {
                "kind": "return",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
            "line": 188,
            "col": 2,
            "byteIndex": 4839
          }
        }
      ],
      "extends": "Error",
      "implements": [
        {
          "repr": "IHelpful",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "IHelpful"
          }
        }
      ],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExceptionData"
            }
          },
          "default": {
            "repr": "ExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExceptionData"
            }
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 406
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the Exception exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ConnectionException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/connection_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 449
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation returns a disk-related error."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/connection_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 643
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OSException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ConnectionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ConnectionExceptionData"
            }
          },
          "default": {
            "repr": "ConnectionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ConnectionExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ConnectionExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/connection_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 308
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ConnectionException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "OSExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "OSExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DiskException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/disk_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 431
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation returns a disk-related error."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/disk_exception.ts",
            "line": 22,
            "col": 2,
            "byteIndex": 604
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OSException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "DiskExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiskExceptionData"
            }
          },
          "default": {
            "repr": "DiskExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiskExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiskExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/disk_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 296
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the DiskException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "OSExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "OSExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OSException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/os_exception.ts",
      "line": 19,
      "col": 0,
      "byteIndex": 483
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation returns a system-related error, such as I/O errors."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/os_exception.ts",
            "line": 24,
            "col": 2,
            "byteIndex": 648
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Exception",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "OSExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OSExceptionData"
            }
          },
          "default": {
            "repr": "OSExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OSExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "OSExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/os_exception.ts",
      "line": 14,
      "col": 0,
      "byteIndex": 326
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the OSException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MemoryException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/memory_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 439
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation returns a memory-related error."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/memory_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 621
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OSException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "MemoryExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MemoryExceptionData"
            }
          },
          "default": {
            "repr": "MemoryExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MemoryExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "MemoryExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/memory_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 300
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the MemoryException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "OSExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "OSExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ProcessException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/process_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 443
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation returns a process-related error."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/process_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 628
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OSException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ProcessExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ProcessExceptionData"
            }
          },
          "default": {
            "repr": "ProcessExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ProcessExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ProcessExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/process_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 302
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ProcessException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "OSExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "OSExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "InterruptException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/interrupt_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 432
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a system operation is interrupted."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/interrupt_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 623
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OSException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "InterruptExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InterruptExceptionData"
            }
          },
          "default": {
            "repr": "InterruptExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InterruptExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "InterruptExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/interrupt_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 306
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the InterruptException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "OSExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "OSExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "AssertionException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/assertion_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 433
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an false assertion is made."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/assertion_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 627
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "AssertionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AssertionExceptionData"
            }
          },
          "default": {
            "repr": "AssertionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AssertionExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "AssertionExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/assertion_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 311
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ValueException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "ValueExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "ValueExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "FormatException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/format_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 439
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when formatting is unsuccessful, or invalid."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/format_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 624
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "FormatExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "FormatExceptionData"
            }
          },
          "default": {
            "repr": "FormatExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "FormatExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "FormatExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/format_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 308
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ValueException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "ValueExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "ValueExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "InvalidException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/invalid_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 417
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when data, or an operation, is invalid."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/invalid_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 600
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Exception",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "InvalidExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InvalidExceptionData"
            }
          },
          "default": {
            "repr": "InvalidExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InvalidExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "InvalidExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/invalid_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 295
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the InvalidException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "ExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "ExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NotFoundException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_found_exception.ts",
      "line": 17,
      "col": 0,
      "byteIndex": 431
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a resource is not found."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_found_exception.ts",
            "line": 23,
            "col": 2,
            "byteIndex": 622
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "NotFoundExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotFoundExceptionData"
            }
          },
          "default": {
            "repr": "NotFoundExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotFoundExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "NotFoundExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_found_exception.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 313
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the NotFoundException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "ValueExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "ValueExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NotSupportedException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_supported_exception.ts",
      "line": 20,
      "col": 0,
      "byteIndex": 489
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a process or feature is not supported for an environment."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_supported_exception.ts",
            "line": 26,
            "col": 2,
            "byteIndex": 694
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "InvalidException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "NotSupportedExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotSupportedExceptionData"
            }
          },
          "default": {
            "repr": "NotSupportedExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotSupportedExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "NotSupportedExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_supported_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 332
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the NotSupportedException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "InvalidExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "InvalidExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ValueException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/value_exception.ts",
      "line": 20,
      "col": 0,
      "byteIndex": 430
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a value is invalid."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/value_exception.ts",
            "line": 25,
            "col": 2,
            "byteIndex": 611
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "InvalidException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ValueExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ValueExceptionData"
            }
          },
          "default": {
            "repr": "ValueExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ValueExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ValueExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/value_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 318
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ValueException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "InvalidExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "InvalidExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ExternalException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
      "line": 31,
      "col": 0,
      "byteIndex": 807
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an external codebase raised an exception."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new ExternalException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 37,
            "col": 2,
            "byteIndex": 1021
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ExternalException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 44,
            "col": 2,
            "byteIndex": 1185
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ExternalException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 51,
            "col": 2,
            "byteIndex": 1381
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ExternalException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 59,
            "col": 2,
            "byteIndex": 1647
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 61,
            "col": 2,
            "byteIndex": 1689
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
            "line": 79,
            "col": 2,
            "byteIndex": 2106
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OperationException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ExternalExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExternalExceptionData"
            }
          },
          "default": {
            "repr": "ExternalExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExternalExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ExternalExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/external_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 465
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ExternalException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "externalType",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "Codebase",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Codebase"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "externalName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NotImplementedException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
      "line": 25,
      "col": 0,
      "byteIndex": 652
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a class method is not implemented."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new NotImplementedException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 31,
            "col": 2,
            "byteIndex": 888
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an NotImplementedException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 38,
            "col": 2,
            "byteIndex": 1058
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an NotImplementedException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 45,
            "col": 2,
            "byteIndex": 1260
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an NotImplementedException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 53,
            "col": 2,
            "byteIndex": 1532
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 55,
            "col": 2,
            "byteIndex": 1574
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
            "line": 73,
            "col": 2,
            "byteIndex": 1991
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "InvalidException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "NotImplementedExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotImplementedExceptionData"
            }
          },
          "default": {
            "repr": "NotImplementedExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotImplementedExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "NotImplementedExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/not_implemented_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 426
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the NotImplementedException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "methodName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DecoratorException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
      "line": 31,
      "col": 0,
      "byteIndex": 782
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a decorator fails to apply."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new DecoratorException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 37,
            "col": 2,
            "byteIndex": 996
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an DecoratorException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 44,
            "col": 2,
            "byteIndex": 1161
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an DecoratorException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 51,
            "col": 2,
            "byteIndex": 1358
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an DecoratorException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 59,
            "col": 2,
            "byteIndex": 1625
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 61,
            "col": 2,
            "byteIndex": 1667
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
            "line": 79,
            "col": 2,
            "byteIndex": 2084
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "DecoratorExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DecoratorExceptionData"
            }
          },
          "default": {
            "repr": "DecoratorExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DecoratorExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "DecoratorExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/decorator_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 466
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the DecoratorException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "decoratorTarget",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "DecoratorTarget",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DecoratorTarget"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "decoratorName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "TimeoutException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
      "line": 35,
      "col": 0,
      "byteIndex": 860
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a software operation has timed out."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new TimeoutException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 41,
            "col": 2,
            "byteIndex": 1070
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an TimeoutException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 48,
            "col": 2,
            "byteIndex": 1233
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an TimeoutException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 55,
            "col": 2,
            "byteIndex": 1428
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an TimeoutException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 63,
            "col": 2,
            "byteIndex": 1693
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 65,
            "col": 2,
            "byteIndex": 1735
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
            "line": 83,
            "col": 2,
            "byteIndex": 2152
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OperationException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "TimeoutExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TimeoutExceptionData"
            }
          },
          "default": {
            "repr": "TimeoutExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TimeoutExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "TimeoutExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/timeout_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 472
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the TimeoutException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "operationType",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "SoftwareOperation",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SoftwareOperation"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "operationName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "operationTimeout",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RecursionException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
      "line": 35,
      "col": 0,
      "byteIndex": 927
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a software operation exceeds a max recursion depth."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new RecursionException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 41,
            "col": 2,
            "byteIndex": 1145
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RecursionException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 48,
            "col": 2,
            "byteIndex": 1310
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RecursionException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 55,
            "col": 2,
            "byteIndex": 1507
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RecursionException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 63,
            "col": 2,
            "byteIndex": 1774
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 65,
            "col": 2,
            "byteIndex": 1816
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
            "line": 83,
            "col": 2,
            "byteIndex": 2233
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OperationException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "RecursionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RecursionExceptionData"
            }
          },
          "default": {
            "repr": "RecursionExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RecursionExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "RecursionExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/recursion_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 476
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the RecursionException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "operationType",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "SoftwareOperation",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SoftwareOperation"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "operationName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "recursionDepth",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OperationException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/operation_exception.ts",
      "line": 19,
      "col": 0,
      "byteIndex": 461
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a software operation fails."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/operation_exception.ts",
            "line": 25,
            "col": 2,
            "byteIndex": 650
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Exception",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "OperationExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OperationExceptionData"
            }
          },
          "default": {
            "repr": "OperationExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OperationExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "OperationExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/operation_exception.ts",
      "line": 14,
      "col": 0,
      "byteIndex": 340
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the OperationException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "IterationException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
      "line": 39,
      "col": 0,
      "byteIndex": 1043
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a software operation has exceeded max iterations."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new IterationException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 45,
            "col": 2,
            "byteIndex": 1261
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IterationException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 52,
            "col": 2,
            "byteIndex": 1426
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IterationException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 59,
            "col": 2,
            "byteIndex": 1623
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IterationException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 67,
            "col": 2,
            "byteIndex": 1890
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 69,
            "col": 2,
            "byteIndex": 1932
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
            "line": 87,
            "col": 2,
            "byteIndex": 2349
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "OperationException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "IterationExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IterationExceptionData"
            }
          },
          "default": {
            "repr": "IterationExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IterationExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "IterationExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/iteration_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 476
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the IterationException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "operationType",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "SoftwareOperation",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SoftwareOperation"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "operationName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "iterationCount",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "repeatingValues",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MethodException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
      "line": 35,
      "col": 0,
      "byteIndex": 815
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a method does not exist on an object."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new MethodException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 41,
            "col": 2,
            "byteIndex": 1020
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an MethodException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 48,
            "col": 2,
            "byteIndex": 1182
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an MethodException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 55,
            "col": 2,
            "byteIndex": 1376
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an MethodException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 63,
            "col": 2,
            "byteIndex": 1640
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 65,
            "col": 2,
            "byteIndex": 1682
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
            "line": 83,
            "col": 2,
            "byteIndex": 2099
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "NotFoundException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "MethodExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MethodExceptionData"
            }
          },
          "default": {
            "repr": "MethodExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MethodExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "MethodExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/method_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 413
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the MethodException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "methodName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "valueName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "validMethods",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "KeyException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
      "line": 35,
      "col": 0,
      "byteIndex": 789
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a property key doesnâ€™t exist on an object."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new KeyException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 40,
            "col": 2,
            "byteIndex": 977
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an KeyException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 47,
            "col": 2,
            "byteIndex": 1136
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an KeyException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 54,
            "col": 2,
            "byteIndex": 1327
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an KeyException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 62,
            "col": 2,
            "byteIndex": 1588
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 64,
            "col": 2,
            "byteIndex": 1630
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
            "line": 82,
            "col": 2,
            "byteIndex": 2047
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "MethodException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "KeyExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "KeyExceptionData"
            }
          },
          "default": {
            "repr": "KeyExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "KeyExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "KeyExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/key_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 402
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the KeyException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "key",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "valueName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "validKeys",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ArgumentException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
      "line": 30,
      "col": 0,
      "byteIndex": 727
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an argument has the correct type but has an invalid value."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new ArgumentException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 36,
            "col": 2,
            "byteIndex": 937
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 43,
            "col": 2,
            "byteIndex": 1101
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 50,
            "col": 2,
            "byteIndex": 1297
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 58,
            "col": 2,
            "byteIndex": 1563
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 60,
            "col": 2,
            "byteIndex": 1605
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
            "line": 78,
            "col": 2,
            "byteIndex": 2022
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ArgumentExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ArgumentExceptionData"
            }
          },
          "default": {
            "repr": "ArgumentExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ArgumentExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ArgumentExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 410
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ArgumentException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "argumentName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "argumentConstraints",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RangeException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
      "line": 41,
      "col": 0,
      "byteIndex": 924
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when a value is outside the range of values."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new RangeException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 46,
            "col": 2,
            "byteIndex": 1119
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RangeException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 53,
            "col": 2,
            "byteIndex": 1280
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RangeException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 60,
            "col": 2,
            "byteIndex": 1473
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an RangeException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 68,
            "col": 2,
            "byteIndex": 1736
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 70,
            "col": 2,
            "byteIndex": 1778
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
            "line": 88,
            "col": 2,
            "byteIndex": 2195
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "ValueException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "RangeExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RangeExceptionData"
            }
          },
          "default": {
            "repr": "RangeExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RangeExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "RangeExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/range_exception.ts",
      "line": 16,
      "col": 0,
      "byteIndex": 460
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the RangeException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "value",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "SoftwareOperation",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SoftwareOperation"
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "valueName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "lowerBound",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "upperBound",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "IndexException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
      "line": 35,
      "col": 0,
      "byteIndex": 752
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an index is outside the bounds of an array."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new IndexException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 40,
            "col": 2,
            "byteIndex": 947
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IndexException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 47,
            "col": 2,
            "byteIndex": 1108
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IndexException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 54,
            "col": 2,
            "byteIndex": 1301
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an IndexException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 62,
            "col": 2,
            "byteIndex": 1564
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 64,
            "col": 2,
            "byteIndex": 1606
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
            "line": 82,
            "col": 2,
            "byteIndex": 2023
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "RangeException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "IndexExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IndexExceptionData"
            }
          },
          "default": {
            "repr": "IndexExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IndexExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "IndexExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/index_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 404
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the IndexException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "index",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "valueName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "upperBound",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ArgumentIndexException",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
      "line": 30,
      "col": 0,
      "byteIndex": 774
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an index is outside the bounds of an arguments array."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new ArgumentIndexException with the default message description."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 36,
            "col": 2,
            "byteIndex": 1004
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentIndexException with a message description.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "A human-readable description of the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 43,
            "col": 2,
            "byteIndex": 1173
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentIndexException with a message description created from the exception data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 50,
            "col": 2,
            "byteIndex": 1374
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an ArgumentIndexException with a message description and additional relevant data.\n",
            "tags": [
              {
                "kind": "param",
                "name": "message",
                "doc": "The human-readable description of the exception."
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "Additional, relevant data about the exception."
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 58,
            "col": 2,
            "byteIndex": 1645
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "messageOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 60,
            "col": 2,
            "byteIndex": 1687
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The numeric code unique to this type of exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
            "line": 78,
            "col": 2,
            "byteIndex": 2104
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "IndexException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ArgumentIndexExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ArgumentIndexExceptionData"
            }
          },
          "default": {
            "repr": "ArgumentIndexExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ArgumentIndexExceptionData"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ArgumentIndexExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/exceptions/argument_index_exception.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 420
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Additional data about the ArgumentIndexException exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionData",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "index",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "upperBound",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionData"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "BaseExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/types/types.ts",
      "line": 68,
      "col": 0,
      "byteIndex": 1674
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A utility type to easily create an exceptionâ€™s named data properties.\n",
      "tags": [
        {
          "kind": "template",
          "name": "T",
          "doc": "- The type describing the additional data properties for the exception.\n"
        },
        {
          "kind": "unsupported",
          "value": "@see {@link CommonExceptionData}\n"
        },
        {
          "kind": "example",
          "doc": "```ts\ntype ExceptionData = BaseExceptionData<{\n  foo?: string;\n  bar?: string;\n}>;\n\nclass Exception<T extends ExceptionData = ExceptionData > extends Error {\n  constructor(protected data: ExceptionData ) {\n    const { foo, bar } = data;\n\n    const message = foo\n      ? `Foo: ${foo}${bar ? `, Bar: ${bar}` : ''}`\n      : bar ? `Bar: ${bar}`: '';\n\n    super(message);\n  }\n}\n\ntry {\n  throw new Exception({bar: 'Oh no!'})\n} catch(e) {\n  console.log((e as Exception).message);\n  //  Bar: Oh No!\n}\n```"
        }
      ]
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "CommonExceptionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommonExceptionData"
            }
          },
          {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          }
        ]
      },
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "IndeterminateObject",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IndeterminateObject"
            }
          },
          "default": {
            "repr": "IndeterminateObject",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IndeterminateObject"
            }
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "CommonExceptionData",
    "location": {
      "filename": "file:///workspaces/common-exceptions/src/types/types.ts",
      "line": 27,
      "col": 0,
      "byteIndex": 718
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A type alias describing the exception data properties accepted for all exceptions, and allowing for any other exception data property to be defined.\n",
      "tags": [
        {
          "kind": "example",
          "doc": "```ts\nconst exceptionData: CommonExceptionData = {};\n\ntry {\n  throw new Error('I make things up. Nothing is happening.');\n} catch(e) {\n  exceptionData.cause = e as Error;\n}\n\nconsole.log(exceptionData.cause?.message);\n//  I make things up. Nothing is happening.\n```"
        }
      ]
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "IndeterminateObject",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IndeterminateObject"
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "cause",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Error",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Error"
                        }
                      },
                      {
                        "repr": "Exception",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Exception"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        ]
      },
      "typeParams": []
    }
  }
]
